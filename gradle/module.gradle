apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion as Integer
    buildToolsVersion rootProject.ext.buildToolsVersion

    useLibrary 'org.apache.http.legacy'

    defaultConfig {

        if (project.ext.has("versionCode")) {
            versionCode project.ext.getProperty("versionCode") as Integer
        } else {
            versionCode 1
        }

        versionName project.ext.getProperty("version") as String

        minSdkVersion rootProject.ext.minSdkVersion as Integer
        targetSdkVersion rootProject.ext.targetSdkVersion as Integer

        if (project.ext.has("moduleName")) {
            ndk {
                moduleName project.ext.getProperty("moduleName")
                //abiFilters "armeabi", "armeabi-v7a", "x86"
                setAbiFilters project.ext.has("abiFilters") ? project.ext.getProperty("abiFilters") : ["armeabi"]
            }
        }

        if (project.ext.has("resourcePrefix")) {
            resourcePrefix project.ext.getProperty("resourcePrefix")
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

}

if (project.ext.has("kotlin") && (project.ext.getProperty("kotlin") as boolean)) {
    apply plugin: 'kotlin-android'
    apply plugin: 'kotlin-android-extensions'

    dependencies {
        compile deps.SKotlin
    }
}